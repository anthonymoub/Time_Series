<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0806.1050                               -->
<workbook original-version='18.1' source-build='2022.4.6 (20224.23.0806.1050)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='movie_studio_stocks' inline='true' name='federated.1rovmpb13pzx7n17sszfp1n3mz9q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='movie_studio_stocks' name='textscan.06iyhgz19b3jlm1g0u47a0tmvkm6'>
            <connection class='textscan' directory='/Users/anthonymoubarak/Desktop/Time_Series/Project/Data/Stocks' filename='movie_studio_stocks.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06iyhgz19b3jlm1g0u47a0tmvkm6' name='movie_studio_stocks.csv' table='[movie_studio_stocks#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Disney' ordinal='2' />
            <column datatype='real' name='WB' ordinal='3' />
            <column datatype='real' name='Paramount' ordinal='4' />
            <column datatype='real' name='Lionsgate' ordinal='5' />
            <column datatype='real' name='Netflix' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06iyhgz19b3jlm1g0u47a0tmvkm6' name='movie_studio_stocks.csv' table='[movie_studio_stocks#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Disney' ordinal='2' />
            <column datatype='real' name='WB' ordinal='3' />
            <column datatype='real' name='Paramount' ordinal='4' />
            <column datatype='real' name='Lionsgate' ordinal='5' />
            <column datatype='real' name='Netflix' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[movie_studio_stocks.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[movie_studio_stocks.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movie_studio_stocks.csv_76A176371F9440B3B23BAD575707018C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[movie_studio_stocks.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movie_studio_stocks.csv_76A176371F9440B3B23BAD575707018C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disney</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Disney]</local-name>
            <parent-name>[movie_studio_stocks.csv]</parent-name>
            <remote-alias>Disney</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movie_studio_stocks.csv_76A176371F9440B3B23BAD575707018C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WB]</local-name>
            <parent-name>[movie_studio_stocks.csv]</parent-name>
            <remote-alias>WB</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movie_studio_stocks.csv_76A176371F9440B3B23BAD575707018C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Paramount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Paramount]</local-name>
            <parent-name>[movie_studio_stocks.csv]</parent-name>
            <remote-alias>Paramount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movie_studio_stocks.csv_76A176371F9440B3B23BAD575707018C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lionsgate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lionsgate]</local-name>
            <parent-name>[movie_studio_stocks.csv]</parent-name>
            <remote-alias>Lionsgate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movie_studio_stocks.csv_76A176371F9440B3B23BAD575707018C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Netflix</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Netflix]</local-name>
            <parent-name>[movie_studio_stocks.csv]</parent-name>
            <remote-alias>Netflix</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movie_studio_stocks.csv_76A176371F9440B3B23BAD575707018C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Disney]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lionsgate]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Netflix]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Paramount]' role='dimension' type='ordinal' />
      <column datatype='real' name='[WB]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='movie_studio_stocks.csv' datatype='table' name='[__tableau_internal_object_id__].[movie_studio_stocks.csv_76A176371F9440B3B23BAD575707018C]' role='measure' type='quantitative' />
      <column-instance column='[Disney]' derivation='Avg' name='[avg:Disney:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lionsgate]' derivation='Avg' name='[avg:Lionsgate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Netflix]' derivation='Avg' name='[avg:Netflix:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Paramount]' derivation='Avg' name='[avg:Paramount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WB]' derivation='Avg' name='[avg:WB:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Disney:qk]&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:WB:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Paramount:qk]&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Netflix:qk]&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Lionsgate:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='movie_studio_stocks.csv' id='movie_studio_stocks.csv_76A176371F9440B3B23BAD575707018C'>
            <properties context=''>
              <relation connection='textscan.06iyhgz19b3jlm1g0u47a0tmvkm6' name='movie_studio_stocks.csv' table='[movie_studio_stocks#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='real' name='Disney' ordinal='2' />
                  <column datatype='real' name='WB' ordinal='3' />
                  <column datatype='real' name='Paramount' ordinal='4' />
                  <column datatype='real' name='Lionsgate' ordinal='5' />
                  <column datatype='real' name='Netflix' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='movie_stocks_normalized' inline='true' name='federated.0loy2yg08w9vym113cmd00823x2c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='movie_stocks_normalized' name='textscan.1q7agzt1i3dq6b1g4yz351otl0dq'>
            <connection class='textscan' directory='/Users/anthonymoubarak/Desktop/Time_Series/Project/Data/Stocks' filename='movie_stocks_normalized.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1q7agzt1i3dq6b1g4yz351otl0dq' name='movie_stocks_normalized.csv' table='[movie_stocks_normalized#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Disney' ordinal='2' />
            <column datatype='real' name='WB' ordinal='3' />
            <column datatype='real' name='Paramount' ordinal='4' />
            <column datatype='real' name='Lionsgate' ordinal='5' />
            <column datatype='real' name='Netflix' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1q7agzt1i3dq6b1g4yz351otl0dq' name='movie_stocks_normalized.csv' table='[movie_stocks_normalized#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Disney' ordinal='2' />
            <column datatype='real' name='WB' ordinal='3' />
            <column datatype='real' name='Paramount' ordinal='4' />
            <column datatype='real' name='Lionsgate' ordinal='5' />
            <column datatype='real' name='Netflix' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[movie_stocks_normalized.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[movie_stocks_normalized.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[movie_stocks_normalized.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disney</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Disney]</local-name>
            <parent-name>[movie_stocks_normalized.csv]</parent-name>
            <remote-alias>Disney</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WB]</local-name>
            <parent-name>[movie_stocks_normalized.csv]</parent-name>
            <remote-alias>WB</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Paramount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Paramount]</local-name>
            <parent-name>[movie_stocks_normalized.csv]</parent-name>
            <remote-alias>Paramount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lionsgate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lionsgate]</local-name>
            <parent-name>[movie_stocks_normalized.csv]</parent-name>
            <remote-alias>Lionsgate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Netflix</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Netflix]</local-name>
            <parent-name>[movie_stocks_normalized.csv]</parent-name>
            <remote-alias>Netflix</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Disney]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lionsgate]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Netflix]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Paramount]' role='dimension' type='ordinal' />
      <column datatype='real' name='[WB]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='movie_stocks_normalized.csv' datatype='table' name='[__tableau_internal_object_id__].[movie_stocks_normalized.csv_4218E79500CC4D588E1B46BEE9B0512B]' role='measure' type='quantitative' />
      <column-instance column='[Disney]' derivation='Avg' name='[avg:Disney:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lionsgate]' derivation='Avg' name='[avg:Lionsgate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Netflix]' derivation='Avg' name='[avg:Netflix:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Paramount]' derivation='Avg' name='[avg:Paramount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WB]' derivation='Avg' name='[avg:WB:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Disney:qk]&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Netflix:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:WB:qk]&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Paramount:qk]&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Lionsgate:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='movie_stocks_normalized.csv' id='movie_stocks_normalized.csv_4218E79500CC4D588E1B46BEE9B0512B'>
            <properties context=''>
              <relation connection='textscan.1q7agzt1i3dq6b1g4yz351otl0dq' name='movie_stocks_normalized.csv' table='[movie_stocks_normalized#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='real' name='Disney' ordinal='2' />
                  <column datatype='real' name='WB' ordinal='3' />
                  <column datatype='real' name='Paramount' ordinal='4' />
                  <column datatype='real' name='Lionsgate' ordinal='5' />
                  <column datatype='real' name='Netflix' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='average_stock_prices' inline='true' name='federated.16aipgy0hoioml13pfsyq1jde8wm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='average_stock_prices' name='textscan.12pqpty1h4kto617hufsx0or6zkr'>
            <connection class='textscan' directory='/Users/anthonymoubarak/Desktop/Time_Series/Project/Data/Stocks' filename='average_stock_prices.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12pqpty1h4kto617hufsx0or6zkr' name='average_stock_prices.csv' table='[average_stock_prices#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='Disney' ordinal='1' />
            <column datatype='real' name='Warner' ordinal='2' />
            <column datatype='real' name='Paramount' ordinal='3' />
            <column datatype='real' name='Lionsgate' ordinal='4' />
            <column datatype='real' name='Netflix' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12pqpty1h4kto617hufsx0or6zkr' name='average_stock_prices.csv' table='[average_stock_prices#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='Disney' ordinal='1' />
            <column datatype='real' name='Warner' ordinal='2' />
            <column datatype='real' name='Paramount' ordinal='3' />
            <column datatype='real' name='Lionsgate' ordinal='4' />
            <column datatype='real' name='Netflix' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[average_stock_prices.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[average_stock_prices.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disney</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Disney]</local-name>
            <parent-name>[average_stock_prices.csv]</parent-name>
            <remote-alias>Disney</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Warner</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Warner]</local-name>
            <parent-name>[average_stock_prices.csv]</parent-name>
            <remote-alias>Warner</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Paramount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Paramount]</local-name>
            <parent-name>[average_stock_prices.csv]</parent-name>
            <remote-alias>Paramount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lionsgate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lionsgate]</local-name>
            <parent-name>[average_stock_prices.csv]</parent-name>
            <remote-alias>Lionsgate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Netflix</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Netflix]</local-name>
            <parent-name>[average_stock_prices.csv]</parent-name>
            <remote-alias>Netflix</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Disney]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lionsgate]' role='measure' type='quantitative' />
      <column datatype='real' name='[Netflix]' role='measure' type='quantitative' />
      <column datatype='real' name='[Paramount]' role='measure' type='quantitative' />
      <column datatype='real' name='[Warner]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='average_stock_prices.csv' datatype='table' name='[__tableau_internal_object_id__].[average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Paramount]' derivation='Avg' name='[avg:Paramount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Warner]' derivation='Avg' name='[avg:Warner:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Disney]' derivation='Sum' name='[sum:Disney:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lionsgate]' derivation='Sum' name='[sum:Lionsgate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Netflix]' derivation='Sum' name='[sum:Netflix:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Paramount]' derivation='Sum' name='[sum:Paramount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Warner]' derivation='Sum' name='[sum:Warner:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Disney:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[__tableau_internal_object_id__].[cnt:average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD:qk]&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Paramount:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Warner:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[avg:Warner:qk]&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Lionsgate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[avg:Paramount:qk]&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Netflix:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='average_stock_prices.csv' id='average_stock_prices.csv_5591D28DF0124485936D442929C2C7CD'>
            <properties context=''>
              <relation connection='textscan.12pqpty1h4kto617hufsx0or6zkr' name='average_stock_prices.csv' table='[average_stock_prices#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='real' name='Disney' ordinal='1' />
                  <column datatype='real' name='Warner' ordinal='2' />
                  <column datatype='real' name='Paramount' ordinal='3' />
                  <column datatype='real' name='Lionsgate' ordinal='4' />
                  <column datatype='real' name='Netflix' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Disney' inline='true' name='federated.0b5dh4c1y7l3zx15mmr92015epvh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Disney' name='textscan.0mfo0ae0g2vyli12pptzc1ymgtfv'>
            <connection class='textscan' directory='/Users/anthonymoubarak/Desktop/Time_Series/Project/Data/Stocks' filename='Disney.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0mfo0ae0g2vyli12pptzc1ymgtfv' name='Disney.csv' table='[Disney#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Open' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Close' ordinal='4' />
            <column datatype='real' name='Adj Close' ordinal='5' />
            <column datatype='integer' name='Volume' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0mfo0ae0g2vyli12pptzc1ymgtfv' name='Disney.csv' table='[Disney#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Open' ordinal='1' />
            <column datatype='real' name='High' ordinal='2' />
            <column datatype='real' name='Low' ordinal='3' />
            <column datatype='real' name='Close' ordinal='4' />
            <column datatype='real' name='Adj Close' ordinal='5' />
            <column datatype='integer' name='Volume' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Disney.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Disney.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[Disney.csv]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[Disney.csv]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[Disney.csv]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[Disney.csv]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adj Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adj Close]</local-name>
            <parent-name>[Disney.csv]</parent-name>
            <remote-alias>Adj Close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[Disney.csv]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Close-Open' datatype='real' name='[Calculation_6096114684781170689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Close])-SUM([Open]))*30' />
      </column>
      <column caption='Close-Open&gt;0?' datatype='boolean' name='[Calculation_6096114684782002179]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_6096114684781170689]&gt;0' />
      </column>
      <column caption='Low-High' datatype='real' name='[Calculation_6096114684782796804]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Low])-SUM([High])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Disney.csv' datatype='table' name='[__tableau_internal_object_id__].[Disney.csv_CCA41F7BD5C246FAB2DC71F843A8B5C1]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_6096114684782002179]' derivation='User' name='[usr:Calculation_6096114684782002179:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_6096114684782002179:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Disney.csv' id='Disney.csv_CCA41F7BD5C246FAB2DC71F843A8B5C1'>
            <properties context=''>
              <relation connection='textscan.0mfo0ae0g2vyli12pptzc1ymgtfv' name='Disney.csv' table='[Disney#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='real' name='Open' ordinal='1' />
                  <column datatype='real' name='High' ordinal='2' />
                  <column datatype='real' name='Low' ordinal='3' />
                  <column datatype='real' name='Close' ordinal='4' />
                  <column datatype='real' name='Adj Close' ordinal='5' />
                  <column datatype='integer' name='Volume' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='studio_releases' inline='true' name='federated.17031t10szzmba1g7my030v14hpw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='studio_releases' name='textscan.0xdomlc0zh8o161acdl1x1yppny1'>
            <connection class='textscan' directory='/Users/anthonymoubarak/Desktop/Time_Series/Project/Data/Stocks' filename='studio_releases.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0xdomlc0zh8o161acdl1x1yppny1' name='studio_releases.csv' table='[studio_releases#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='string' name='genre' ordinal='2' />
            <column datatype='integer' name='top_release' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0xdomlc0zh8o161acdl1x1yppny1' name='studio_releases.csv' table='[studio_releases#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='string' name='genre' ordinal='2' />
            <column datatype='integer' name='top_release' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[studio_releases.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[studio_releases.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[studio_releases.csv_F3B3E874AB7E404DB9FEEF30A839E242]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[studio_releases.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[studio_releases.csv_F3B3E874AB7E404DB9FEEF30A839E242]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genre</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genre]</local-name>
            <parent-name>[studio_releases.csv]</parent-name>
            <remote-alias>genre</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[studio_releases.csv_F3B3E874AB7E404DB9FEEF30A839E242]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>top_release</remote-name>
            <remote-type>20</remote-type>
            <local-name>[top_release]</local-name>
            <parent-name>[studio_releases.csv]</parent-name>
            <remote-alias>top_release</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[studio_releases.csv_F3B3E874AB7E404DB9FEEF30A839E242]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='studio_releases.csv' datatype='table' name='[__tableau_internal_object_id__].[studio_releases.csv_F3B3E874AB7E404DB9FEEF30A839E242]' role='measure' type='quantitative' />
      <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
      <column caption='Top Release' datatype='integer' name='[top_release]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[genre]' derivation='None' name='[none:genre:nk]' pivot='key' type='nominal' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[top_release]' derivation='Sum' name='[sum:top_release:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17031t10szzmba1g7my030v14hpw].[sum:top_release:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.17031t10szzmba1g7my030v14hpw].[sum:F1:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:genre:nk]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;Disney&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Lionsgate&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;Paramount&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Warner Brothers&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='studio_releases.csv' id='studio_releases.csv_F3B3E874AB7E404DB9FEEF30A839E242'>
            <properties context=''>
              <relation connection='textscan.0xdomlc0zh8o161acdl1x1yppny1' name='studio_releases.csv' table='[studio_releases#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='string' name='genre' ordinal='2' />
                  <column datatype='integer' name='top_release' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average_Stock_Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Stock Price&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='average_stock_prices' name='federated.16aipgy0hoioml13pfsyq1jde8wm' />
          </datasources>
          <datasource-dependencies datasource='federated.16aipgy0hoioml13pfsyq1jde8wm'>
            <column datatype='real' name='[Disney]' role='measure' type='quantitative' />
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lionsgate]' role='measure' type='quantitative' />
            <column datatype='real' name='[Netflix]' role='measure' type='quantitative' />
            <column datatype='real' name='[Paramount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Warner]' role='measure' type='quantitative' />
            <column-instance column='[Disney]' derivation='Sum' name='[sum:Disney:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lionsgate]' derivation='Sum' name='[sum:Lionsgate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Netflix]' derivation='Sum' name='[sum:Netflix:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Paramount]' derivation='Sum' name='[sum:Paramount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Warner]' derivation='Sum' name='[sum:Warner:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16aipgy0hoioml13pfsyq1jde8wm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Disney:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:F1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Lionsgate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Netflix:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Paramount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Warner:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16aipgy0hoioml13pfsyq1jde8wm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.16aipgy0hoioml13pfsyq1jde8wm].[:Measure Names]' />
              <size column='[federated.16aipgy0hoioml13pfsyq1jde8wm].[Multiple Values]' />
              <text column='[federated.16aipgy0hoioml13pfsyq1jde8wm].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2844F5C4-CF66-4662-B253-76256B2A2390}' />
    </worksheet>
    <worksheet name='Normalized_stocks_compared'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stock Prices Over Time (Normalized)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='movie_stocks_normalized' name='federated.0loy2yg08w9vym113cmd00823x2c' />
          </datasources>
          <datasource-dependencies datasource='federated.0loy2yg08w9vym113cmd00823x2c'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Disney]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lionsgate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Netflix]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Paramount]' role='dimension' type='ordinal' />
            <column datatype='real' name='[WB]' role='dimension' type='ordinal' />
            <column-instance column='[Disney]' derivation='Avg' name='[avg:Disney:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lionsgate]' derivation='Avg' name='[avg:Lionsgate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Netflix]' derivation='Avg' name='[avg:Netflix:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Paramount]' derivation='Avg' name='[avg:Paramount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WB]' derivation='Avg' name='[avg:WB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WB]' derivation='None' name='[none:WB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0loy2yg08w9vym113cmd00823x2c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Disney:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Netflix:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Paramount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Lionsgate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:WB:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0loy2yg08w9vym113cmd00823x2c].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Disney:qk]&quot;</bucket>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Netflix:qk]&quot;</bucket>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Paramount:qk]&quot;</bucket>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[avg:Lionsgate:qk]&quot;</bucket>
              <bucket>&quot;[federated.0loy2yg08w9vym113cmd00823x2c].[none:WB:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0loy2yg08w9vym113cmd00823x2c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0loy2yg08w9vym113cmd00823x2c].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0loy2yg08w9vym113cmd00823x2c].[Multiple Values]</rows>
        <cols>[federated.0loy2yg08w9vym113cmd00823x2c].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{6D68B535-F587-4C21-85D2-6E77B6783184}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='studio_releases' name='federated.17031t10szzmba1g7my030v14hpw' />
          </datasources>
          <datasource-dependencies datasource='federated.17031t10szzmba1g7my030v14hpw'>
            <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
            <column-instance column='[genre]' derivation='None' name='[none:genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[top_release]' derivation='Sum' name='[sum:top_release:qk]' pivot='key' type='quantitative' />
            <column caption='Top Release' datatype='integer' name='[top_release]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.17031t10szzmba1g7my030v14hpw].[none:genre:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17031t10szzmba1g7my030v14hpw].[sum:top_release:qk]</rows>
        <cols>[federated.17031t10szzmba1g7my030v14hpw].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{A425CB73-8E87-4716-98C8-86BC0D1D122A}' />
    </worksheet>
    <worksheet name='Stocks_Compared'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stock Prices Over Time&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='movie_studio_stocks' name='federated.1rovmpb13pzx7n17sszfp1n3mz9q' />
          </datasources>
          <datasource-dependencies datasource='federated.1rovmpb13pzx7n17sszfp1n3mz9q'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Disney]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lionsgate]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Netflix]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Paramount]' role='dimension' type='ordinal' />
            <column datatype='real' name='[WB]' role='dimension' type='ordinal' />
            <column-instance column='[Disney]' derivation='Avg' name='[avg:Disney:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lionsgate]' derivation='Avg' name='[avg:Lionsgate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Netflix]' derivation='Avg' name='[avg:Netflix:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Paramount]' derivation='Avg' name='[avg:Paramount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WB]' derivation='Avg' name='[avg:WB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Paramount]' derivation='None' name='[none:Paramount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Disney:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:WB:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Netflix:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Lionsgate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Paramount:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Disney:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:WB:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Netflix:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[avg:Lionsgate:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[none:Paramount:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[Multiple Values]</rows>
        <cols>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{197B7D19-4584-46FB-B275-D17C71EA37E1}' />
    </worksheet>
  </worksheets>
  <windows source-height='114'>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.17031t10szzmba1g7my030v14hpw].[none:genre:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17031t10szzmba1g7my030v14hpw].[none:genre:nk]</field>
            <field>[federated.17031t10szzmba1g7my030v14hpw].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCED73AA-63FC-4462-8E2B-AAE7458CCCF8}' />
    </window>
    <window class='worksheet' name='Stocks_Compared'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[:Measure Names]</field>
            <field>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[none:Lionsgate:nk]</field>
            <field>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[none:Netflix:nk]</field>
            <field>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[none:Paramount:nk]</field>
            <field>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[none:WB:nk]</field>
            <field>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EC7DAE8-3349-4002-BB26-D246558ED4D3}' />
    </window>
    <window class='worksheet' maximized='true' name='Normalized_stocks_compared'>
      <cards>
        <edge name='left'>
          <strip size='134'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0loy2yg08w9vym113cmd00823x2c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0loy2yg08w9vym113cmd00823x2c].[:Measure Names]</field>
            <field>[federated.0loy2yg08w9vym113cmd00823x2c].[none:Lionsgate:nk]</field>
            <field>[federated.0loy2yg08w9vym113cmd00823x2c].[none:Netflix:nk]</field>
            <field>[federated.0loy2yg08w9vym113cmd00823x2c].[none:Paramount:nk]</field>
            <field>[federated.0loy2yg08w9vym113cmd00823x2c].[none:WB:nk]</field>
            <field>[federated.0loy2yg08w9vym113cmd00823x2c].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF041A7F-98ED-4AEC-BBA8-B1CE4F2A44AC}' />
    </window>
    <window class='worksheet' name='Average_Stock_Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='9' param='[federated.16aipgy0hoioml13pfsyq1jde8wm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16aipgy0hoioml13pfsyq1jde8wm].[:Measure Names]</field>
            <field>[federated.16aipgy0hoioml13pfsyq1jde8wm].[sum:Warner:qk]</field>
            <field>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[none:Lionsgate:ok]</field>
            <field>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[none:Netflix:ok]</field>
            <field>[federated.1rovmpb13pzx7n17sszfp1n3mz9q].[none:Paramount:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D41C0D0B-3B4A-48FD-B8B1-0035F3327E7D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Average_Stock_Price' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd5Cc933n+ffzPJ27pyfnhMFgkBMRCJJgFsUgiaJk2ZIly7s+e1fn23Wt
      9+y6u7pz1dq1V3VV3jvvnr17d+td2wqWtFaJkihRJsVMkARAImdgAAwm55nOuZ9wfzQIkiDC
      DNAzT0/391UFiQNM+E5j8Hye5xe+P8WyLAshhBAVR7W7ACGEEPaQABBCiAolASCEEBVKAkAI
      ISqUBIAQQlQoh90FCGEX0zDQ9RymbmAaOqHJUTLJBJGZCdLxKIaeJzo7RTaduOHH1zZ34PFX
      oTmc1DS14gkEaenpQ1E1NM2B5nSiag4URVnm70yIhVFkGaioJNlUklQsTDIaIjw9wezIFaJz
      U8TnptHzuaJ8DX9NHTWNbdR3rKKmqQ1/TS3VDS34gjVF+fxCFIsEgCh7pmEQmhxleugSs6NX
      iM1NE5ufJpdOLfnXVjUNb6CaurYu6lo7qG/rpqVnHZ5A1ZJ/bSFuRwJAlCXTMMhnM4z1n2bg
      +AEiM5NkknH0XNa2mhRVxe314wvW0Na3iTU7HqC6sRVV02SYSNhCAkCUlVw6RXRuioHjB7ly
      8hCZRMzukm6pbc1Geu+5n+aetQRq6lE1ze6SRAWRABBlIZdJM37pLJOXzzFy/gSpaNjukhZM
      dTho6uqlc8N2erffJ3MFYtlIAIgVb35ihLP7X2P8wikyyQSWZdpd0h1xOF00dPTQe8/99Gy7
      F5fHa3dJosxJAIgVyTQMorNTnN3/GoOnDpHPpO0uqWgURSVQ18C9n/8aLT1rcfsCdpckypQE
      gFhxUrEII+eOc3b/60RnJuwuZ8loDiert9/H+j2PUt/eLfMDougkAMSKEpmZ5PBLP2LqSj/5
      bMbucpacoqhUN7Ww8YEnWH/fY3aXI8qMBIAoeZZlkc9mGDl3nCMv/5hULGJ3ScvO4XLTsX4r
      9zzxXGHpqCpdXMTdkwAQJS8yM8m5A69z5fj75DJLv3mrlDV1r2Hzw0+zavNOu0sRZUACQJS0
      yMwkB372XWaGL2Maht3llARfsIatj36etbsfxuFy2V2OWMEkAERJMk2DmeHLHH7px8yODNhd
      TslxeX1sfvhpNtz/GVwer+wkFndEAkCUHNM0GTh+kKO/+gmp2MrZ0GWHVVt2sefZr+OvrrO7
      FLECyUySKDnDZ4/JxX+Bhk4f4dirPyO5gnY+i9IhASBKhmVZDJ/9cKWPXNAWauD4+xx/7QVS
      8SjyQC8WQ4aAREkwDZ2B4x9w5FfPk45X3jLPYujevIs9X/gagdoGu0sRK4Q8AYiSMHmln6Ov
      /kQu/ndh+MwRTr39ctEOthHlTwJA2C4yM8nRXz2/ojp4lqqBEwc5t/91CQGxIBIAwjaWZRGd
      neTgC99jbmzI7nLKQj6T5vQ7L3PlxAeyb0LclgSAsE0uk+LMu68yPXTJ7lLKSjaZ4NTbLzEz
      fNnuUkSJkwAQthk6fZTBU4fkTnUJxOamOPKr58mVUZtsUXwSAMIWc+NDHP3V88tyMHulmh25
      wsm3fomh63aXIkqUBIBYdql4lCMvP08mGbe7lLJmWSYDxw4wcv44lrkyT0kTS0sCQCwrPZ/j
      8tH90t9nmaRiES4cfItEJGR3KaIESQCIZWNZFtGZSS4dfa8iDnMpFdODF+k/9DamPAWI60gA
      iGVjWSYn3vgF0ZlJu0upKKZpcP7gm4QmRuwuRZQYCQCxbEKTo4xdPGN3GRUpn0lzbv9rskFM
      fIIEgFgW+WyG46+9gCEXINtMXulndnTQ7jJECZEAEEvOMk2GzhyVjUk2S0bmuXhoH9lU0u5S
      RImQABBLLpNKMHruhFx4SsDklQvMjQ1K22gBSACIZRCdmWRmVJZ9loJUNMzQ6SMYet7uUkQJ
      kAAQSyqfy3LxyLvS6bOEXDq6n3Q8ancZogRIAIgllY5FGOs/bXcZ4mNMQ6f/0D67yxAlQAJA
      LKmxi2fIJGJ2lyGuM9Z/mrT8vVQ8CQCxZEzDYOjMEbvLEDeQCM8zdaXf7jKEzSQAxJKZHDhP
      eGrM7jLEDeQzKSYun5XJ4AonASCWzMzIgPT8KVGWZRGeGicemrO7FGEjCQCxJLKpBKHJUUzp
      RV+y4qE5EuE52RNQwSQAxJIIT08QnpThn1KWjkeYGxuUE9kqmASAWBKpaJhUTNb+l7q5sSEZ
      pqtgEgCi6PRcjvmJEek8uQLMjQ2Sz0kAVCoJAFF0+WyaufEhu8sQC5CKRYjPzdhdhrCJBIAo
      OkPXSYTn7S5DLFBoatTuEoRNJABE0Rl6nmRElheuFBE5oa1iSQCIopseuiQrS1aQ2RHp1Fqp
      JABE0eUyKbtLEIsgnUErlwSAKLro7JTdJYhFME2D2LxMBFciCQBRdNlUwu4SxCJYpilPARVK
      AkAUnRz9uPLInE1lcthdgCg/oUn7lhXWt3fT3N0HSiGIpgb7SUZCttVzW4pCVV0jcRuHYEzT
      IB6apbV3vW01CHvIE4AoK3WtXaDA3OggAJ0btqM5XTZXdXOaprHu3kdsrcEyLTIybFeR5AlA
      lJ34/CwzIwOEp8fZ9cxv4PEHaO/bTHvfJhRVZeD4QYbPHmPn019h/OJZVm+/jwsH38RfU8fq
      bXtwuFxMXrnAufdeZ92eRwg2NFNV20A6ESOXSVHd2Mrc6BUuvP8WDpebzQ8/TVVdI8lIiJNv
      vojD7aGlZy2XjryHy+Ojd8cDDBw/SNfG7dS3d+OtqiYZCXHx0Dus2fEAqzbvxOMPMNZ/mqHT
      coCOWD4SAKLs+KprqGvroqlzNaZhoOdyTA5cYPD0EYJ1jWx88AnGL52lprEVVdW4dORdIjMT
      5LNp3v/FD3C43Nz3xW9w+eh+fFXVzI8Ncvrtl9j8yNOEp8Y4t/91eu+5H191LY2dq4nOTnHk
      5efp2ridNTv3MnbhFN6qagBUVSVQXYuqqngDQUITowyfeYGerbupqmvgzLuvEKhr4IMX/xum
      Ia2zxfKSABBlp6lrDb5gLXouy+Vj+9FzGZpX9dGyej1goTmcOK4OC1344C3i87MAeAJBNu59
      AkPXcXl8ON0eTMMgNDlGLpsmFQ0TnZlCz+XIZzOoqkZNUysXPtiHaehMDlygrW8TKDeuK5tK
      Ep4aI59Nk0km0BxO9FwWU9elI6ewhQSAKDujF04w1n8G0zAwDR1fsIa2vo2ceedXWJbFxr2f
      BUDX89cu/gAb7n+cE2++SDYZZ/sTz3HTK/nH5HM5nG4PAJrDgWUYWJaFohSm1xRVBeX2nwdF
      ATmYRSwzCQBRZiz0fB49l/3od0wTLKht6cTt8+PxBT5810/Qc1lqm9pAUQjUNCzoq80MX6Zn
      y268gSCNnauZGDhPNpnAF6ymY91W/DW114aDrq8TCkcz5jIpVm3ZRXhyjOis9OURy0f7sz/7
      sz+zuwhRXk7vexnDprMA9GyWZCz8iSEV09DJZVK4fX7y2TQzwwMkwnOkE9FPdC1NxsJ4A0FM
      XWd27ArR2UmyqQTJaBgjnyOfSZOKhdFzWfLZNKlYlHhoFkVV8fgCJCLzjPefIZdJo2ez+II1
      5NIp5saGiM1Nk8ukScUj6Lkcej5HKh4ll06SScbx+ANkUwkyifiyv2aa08na3Q9T09S27F9b
      2Eux5EBQUWSv/t1/YKz/lN1lfIqiKLc///YOh2IUVcMyjdv+3l3VtkScbg9P/u4f0byqz5av
      L+wj+wBE0TlcpbnufkEX2Du8CN/oQr/Qi3/hy9p4H6YoqJqMBlciCQBRdDce8xalSlVVgvWN
      dpchbCABIIou2NBsdwliERRFxf3hxLioKPLcJ4quul4CYCWpa+sq+ue0LAtTz2OZBsbVFVlG
      Po9lmTd8f1XVUB0OUFQ0pxNVcxbeFktKXmFRdMGGZlwenxwMs0LUFykATD1PLpUgl4iRTUTR
      M2kMPUcuEQMgn0redF5EdThxeLwoqobT68fp8eH0V+EOBHEFqnG4PSgL2U8hFkUCQBSd5nTi
      r6knNyUBsBJU1d3d+H8mFiY2MUwmMo+ey2LkMtfu+hfK1PPkEnkAsrEwUFhF5XB70NxePNW1
      +Oqa8Nc3o7ncd1Wv+IgEgCg6h8tNbUs74Sn72kKLhVE1x9UWGQtjWRZmPoeeTROdGCYxPXb1
      zt7kUzvr7pJlGuTTSfLpJJnIHNGRAVSnk0BzB9Vtq3D5q9Dc7mu7rsXiSQCIonO63NS1dHDF
      7kLEbdU0t11rZXE7Ri5Hcn6axPQYybkpjNzy9i+yLBMjlyU6OkBsfBBfXRNVLV146xpwB2Tl
      2Z2QABBFp2oOqpvbcPuryCaXf2erWLja5nYctxlSMQ2DdHiW8PBl0pFZjBJoXGeZJsm5KVLh
      OdxVNVQ1txNsX4XT47O7tBVFAkAsiWBdE1V1jRIApUxRaOlZi8vjveEfm4ZBLhlj9uJp0qFZ
      TN2e9h63Yhk6mcgc2ViI2NQIDb2b8DW0oGoOmTReAAkAsSSC9U3UNBUOThGlKVBTT1VD86cu
      lJZlkU8liE2OEBq8gGlTX6fFsEyTbDTMxIkDBNt7qG7vwVtTX+jGKm5KXh2xJDSnk/q2rmt9
      90XpqWlqpaax9RO/Z1kWydkJps8dZf7y2RVx8f84yzSJjl1h6uxhwsOX7C6n5EkAiCXTtmYj
      Lq/f7jLEDagOBw2dq/EGgsDV1T2mQWR0gMlTh0jOTi6ql1FJsSxy8Shzl04zdfYIei5rb6+l
      EiYBIJZMbUsHjV2r7S5D3IDb66dj3RYUVS0M+aSTTJ05zMy5o8u+umepmHqeyPAlxo++Syo0
      IyFwAxIAYkn17XzQ7hLEDVTVNVLX2glANh5h5twxYuNDV9fzl5d0eJbpM4dJymE7nyIBIJZU
      Y2cPNU3tdpchrrP+vsdwOF1kEzGmzx4lMTNe1kdS5pJxZi4cJyEh8AkSAGJJuX0B1t378MLO
      xRXLoqq+iY51W0mFZpk8eZB0ePb2H1QGcokYU6cPEZscuWlTukojASCWlKppNHatpqp2YWfs
      iqWlahpr730YI5Nk5sJxMtGQ3SUtKz2TYub8cRIzE3aXUhJkH0AZmY+mmA4niMTTjM1EAcjk
      dMZno2Rzn17RUVPloa2hsAok6HfT2VSD3+tiVWttUeuqbemgY/1WLrz/VlmOMa8kgdpGmrvW
      MHfxFJnI/O0/oAzpmRSzF06iKCqBCj8HWQJgBTEti2xOJ53NE09lGZ2O0j8yy8h0hMGJMMl0
      DsO0MC0LwyhcaC249t/XUxTQrm6UURUFTVNRFHBoKs11AXrb69mwqpGetjpqAh58HhcelwOn
      Q1tU3U63h9Xb9jB24RTxUGUMN5QiRVVp6e4lOzdBOlyZF/8P5ZIx5gfO4XB7cAdrK3bXsBwK
      vwJEExmGp8JMzscZGA9xaXSOwYkQ6ay+bDW01AdY29lIX2c93S01tDdW09G0uAZcB3/+fc4f
      eGOJKhS3E2xoZvPuB1GyKSxjha7xLzJfQwutW+7FWaH7VSQAStj5oRmOXhjn4ugcI1MR5qJJ
      8rq9QyiqqhD0u2lvCNLX2cC2vla297Xi89x+x290doqX/vrPSccjy1CpuN6azTtobe0om3X+
      RaGo1K7qo3nDDrsrsYUEQAkxTJNsTmcqlOCX753n4JkR4qms7Rf9m1EVBb/Xhd/j5PN717N7
      YwfNtVV43TduxGVZJmfe+RVHfvXTlbvLdIVyuT3sfOBRFJmD+RTV6aJ1630EmtoqbihIAqBE
      jM1EOTs4zdvHrnDq8hT6TcbtS1nA62JzbzPP3L+OntZaGmr81+YYPpSMhjj4wg8YOX+8rNed
      lxKH00Xfxq3UVFfuWPfteKrraN12P+6rrTEqhQSAzeYiSQ6eGWHf8UEuDM+U7N3+YgS8LtZ2
      NXDf5i4e2raKuuBHPdpN02D0/Ene//kPSFbYEkQ7KKpKc1snnd2rcTqcdpdTshRVpbZ7LfV9
      m9Eq6HWSALCBZVkYpsVLBy/wxuEBRqYipLJ5u8sqOp/HSXtjNb/x+GZ2b+jA63aiKAp6Psex
      V3/G2XdflQ05S8wXCLJm/Wb8Pr/c/d+Gw+Olddv9+Oub7S5l2UgALCPLsgjH05y8NMmP3zrN
      wFhl3AE7NJXNvc18+eFNbOtrxet2kkunePXb/4GZ4ct2l1e2NKeLjTvuo8qzsCMfBfjqm+nc
      /WjFnCMgAbCMzg1O8/xbZzh+cYJUpvzu+G/H63bwhQc38Mg9PaxurWPy8lkO/PS7JCp0Q9JS
      69v1IO1NLeSSMbtLWUEUOvc8VjFPARIAyyCVyfHKoUu8fKCf4anKXgLp0FR62mr50iObeGRr
      F/3vv8Xx118gXwLnzJaT9rWb2bT7IRJjA3aXsuIEmjto23Y/qqP898lKACwhwzQZnAjzN784
      zKnLkximvNQf0jSVx3b08NwDfcyfeZf+g69jGsu3sa18KdS3dbHjs8+Rn52Qu/87oLk8NG/a
      RfBqu+xyVv4RZ5NkJsf7Z0b4zj8eZSactLuckmMYJm8eucLQZIQv3L+ZljVTTPSfsLusFc9b
      FWTn01/B7/EwO5ayu5wVychlSM5N4G9sKfsVQZUx07HM4qks333pKH/9wiG5+N+CaVlcHpvn
      e6+cYrJqI3Xd6+0uaUVzuNzc88RzNHWuJhWawdTliepOpUNz5FMJu8tYcjIEVESmZTE5F+fP
      v/82A2OhFbmZyy4el4MdXT769H7SkwMoyI/lYngCVez47JdZs3Mvmcg8k6fex5B5lbvSuH47
      dT3rUJTyvU8u3+9smeV1g5OXJvk/f7CP/uE5ufgvUianc+ByjLfmm8gHy3/stZi8VdXsfOrX
      6dv1IJrmIBMNycW/COJTY1hlPm8ncwBFcujcGH/74mHGZ2XS7W6MxDUUdRXdRoxWrbJXTC2E
      w+Vmx5O/xpod96M5nBj5HOnInN1llYVsLISRz6FqXrtLWTLyBHCXTNPk1MAU//HHB+TiXyTD
      UZMTxmomjFosZPfqzbh9fnY98xvXLv4App4nNTdtc2XlwTJNUvPl/VpKANyFXN7gwOkR/t3f
      7yMcT9tdThlRiFl+juprCAXWoGryoHq9+vZVPPy1b7Hu3kc+sVIlNT8jnVaLKFnmh8jLv6w7
      lEzn+P4rx3nxvfNl0cCtFKXw8Fa4lQc6O9joGCE2OYRZ4QeZuH0BtjzyOTbc/xhO96dbPCRm
      5azbYkpH5silErh8AbtLWRISAHcglszw/Ftn+OnbZ+0upewZpsWxGZWO3XtZ1dLByOkP0Ctx
      glNRaGhfxbbHv0Dn+m2o2qeP5TQNg3RYxv+LyTR08mUcADIEtEh53eCtY1d48b3zdpdSMZLp
      HG+cniHZvINdn/sa1U2tdpe0rDSni74de3ng1/4pneu33vDiD5BPJWT4p8gswyCfKt+9PBIA
      i6AbJvuOD/IPr52syGZudpoJJ/n2r07jat/Eo1//fVZv33PDIZByoqgq1U2t7Hn26+z+/Ndo
      aO++5XxIPp3EkhO/isrU82STUbvLWDIyBLQIF0dm+eGrJwjFZMLXDvFUln/3w3f5X//Jozz6
      9d9n+NxxTr35S8LT4+i5rN3lFY2iqvir6+jauJ2tj34eX7BmQR+XS8YlAJaAmc9jmQaKeuMn
      r5VMAmCBpkMJ/u6XR2Wpp83GZ2K8sO8cv/P5nXRt2E5tczvDZ45y+dgBwlNjdpd31xwuN6s2
      76Rn2x7a+zbddLjnRgrN9Mp745Id9FwGPZfD6Sm//QASAAuQyem8uP8854dm7C6l4umGydvH
      r9DdUsOzD24gWN/Exr1P0LlhO1dOvE//oX2k4yvwkV1RaF29ni2PPEND+yrcPv+iDyUpzAEs
      3xOAZVlYFigKKIpy9W0LRVFQFAXTKuziWOknkVmmCWV6cp0EwG3ohsFrhy7xj/svSHuHEpHJ
      6nzv5WP0ttezra8VzeGkpqmVHU9+mQ0PfIahU0e4dPQ9EpF5Msl4yR4+rzocBGrqaevbRN/O
      vdS1dqHdRQ/65Z4AnpkP87PX3+Hph/bQ3dbCC2+8y4tvvcdf/cm/xu/18jfP/4Ldmzdwz4a1
      y1qXWDgJgNsYnYnyi/fOy6RviUlndf72xcP8m9/9DA01/mu/7w0E2fDA46zaspOpwYtMDfYz
      cekc0RLa0OPy+mhdvZ76jlW0r9lEY9dqu0u6IzXBKlAgmkiSyebI5fOYpkU8mcKhOYjGkzTW
      1jA2NcORsxdIpTNsXbeGTWt6uDI2gd/rZWhsgoDfR111kCtjE8yFIqDAY/fuwON288Gps4xM
      TLOup4vdWzYwMVNY5joTCpPN5dm+fg1ul2tJv08zn8PQ85RjY2gJgNv48RunGanwU7xK1cB4
      iFc+uMhvPXXPp/7MW1VNz9bddKzfSmzXFKHJUUYvnGR66JItQ0Sq5qC+vZuWnnW09W2ktrkd
      T6AKdQVPLLqcDuqrg8zMh2muryWv69x/zyYuDY3R09FK0O/D43YzOTOHy+HEGXDw/CtvUROs
      4sjpC0zPh0ik0zz3+ENcHBrhxbf289kHdjM+M8c7R06wYfUq3j50jK3r1vDCG+/Q2ljPxeFR
      LlwZYWJmli88undZhpeMfA4zX543gBIAN2GaFm8cvcy7J4bsLkXchG6YvHroEn2dDexa34Gq
      fvpi4HS5qW/vpq6tk9Xb92DoeWaGB5gbG2T84llSsTD5XBZDz5PP3OXqLstCtcBhKWimicvt
      pbq2gbbutbSuXo8vWI3qdKL6/JDOgRHHdDlR/f7bf+4SpCgKa1d1cfDEaTpbmtB1naf27uGF
      19/B6XRQX1NNwO9lVUcrfp+XVCbDhcFhxqZmyOXzzIUj/E+/91v4vV7C0Rj3bd/Mk3vvZXxm
      lud/9TZVfh/3bFjLPRvWEo0n2X/8NLXBKs5cGuD/+B9/n6DftywB8OGcRjmSALiJyfkYr7x/
      kZwuG2tK2dR8gn88cIE1HfXUBX03fT9FUdEcKprDSce6LXSs28L2z3yR6OwUsfkZUrEwoclR
      8tkMmUQc0zDIphPk0rc+VStQUw+JBNp8BGc0jjuaJGipeNN5qmvcaIPDWK8dxwKSAG43Wlsr
      aBpqYwNqbQ2O9etQGxsLb3d1rqiLzaqOVn708hvMhMLUBKvoamthNhxhcnae6kAAVVF44/0j
      9A+O0FhbQzyZwrw6ofqlJx6myl/4O1NQcGgqqqqiqRqWZZFIZThzaZDZUIRMLkdHcyOGafLs
      Yw9SU7V8O3M1txfN5V62r7ecJABuQDdM3j8zyqXRebtLEQtw4uIkJy5N8vjO3kV/bHVjC9WN
      Ldfe1vM5sqkkpmmQS6dueVi9cXkA5+kLGAMh1EgMZzwJmY/tR4iPf3pRZjaLMTh07eMBsq+8
      jlpfh1JXi6OnB+d99+K8ZxuKt/SXHRaGeVwcOnWOpx7ag6ooNNXXcn5gkM89/AB5XWdsapYv
      PfEwvR1t/Jcf/+Lax2q3WeVUGwzQ097KMw/fh24YpDIZzg8Mo93gSW8pKaq66BVZK4UEwHUs
      y+LKRIhf7j9PJidH6q0EmZzOD145zt4t3bhdd/cj7XC6cFRfnVSs/eSfWYaBlUyiHz9J9s23
      0c+ex0omcdzt0YuGgTkzCzOzGP2XyL3zHmpDPa6nPovr/ntRG5vA5bztk4EdJ1cpisLuLRt4
      5b0PWNPZAcDmvl5eP3CItuYG3E4nXa1N/P0LL4Oi4Pd4cDtd+H0enM6P/q5cLided+EuW9NU
      qvw+erva+fmb73Ls/EVcTgdffeYzeNxLO+FbaeRIyOuYpsVf//wDXth3zu5SxCKoisI/e243
      X3l0c9E/t2VZWKEQ+cNHyb7yOvqZ5WsCqDTU4/7MY7gefADH+nW3fN/QYD+z/SdLrh+QZVkk
      0xlcLieuRS5zNU2TdDaLx+VCW8SmuGIKNLXTsmU3DnfpP5EtljwBXGcumuT1w5ftLkMskmlZ
      vHdyiAe2dNNaX1XUz60fO07mZ78gf/I0ZJa3E6k1N0/mR8+TP3QE9+efwfXwXtTa2hu+r6pp
      hV1ZJUZRFAK+O7t4qqqK3+ahMM3tQXOW5xxAeQ5s3SHTsnjhnXMkUjm7SxF3YHAixOFzo5hF
      eKi1LAszHCb1nb8n+Rd/Rf6Dw8t+8f84Y3CI1N9+h+Rf/CX6ufM33PHr9AfLdqzaNoqC5nKX
      7esqTwAfc2U8xIHTw3aXIe5QOqvz1rEr7FzfTntj9V19LuPiJVJ/+x304yeLVF0RpNPkPziM
      fvY8vj/4fVz334fysTtrh9tjyzxAOVMdTtyBu/tZKmXy03KVbph8cHaU+eitl/2J0jY4EebK
      RJg7ndqy8nly+w+S/L//U2ld/D/GSiRI/b//hfSPfow5H7r2++5AEG2Jd8VWGlVz4PStzH0a
      CyEBcNV0KMGJixPk8qU1gSYWJ53N89bRAQxz8QFgGQb5gx+Q+v/+67UlmqXKisXI/OQFUt/+
      Llbuo12q5Xy3agfV4cRdtbB23CuRBACF8d7BiRD9o7N2lyKKYP+pYUanF9e+w9J1cm++TfLf
      /xXm9PQSVVZk2Sy5V14n+e//EjNS+H6rWjptLqq8uPxVaI5y7AJUIAEA5PIGh8+Pkc3J3X+5
      ePPowu/grXye3HsHSP3132AlV97xf7l33yP97e9hzs3hDtaW7YSlHfyN5X38qPykANm8zv5T
      Q3aXIYroaP844fjCevvoFy+R+cE/YEVX6GE/uTzZN98m+8ZbaIqKu+rGy0TF4vkbWm7/TiuY
      BABw+PwYcVn6WVbmIinODEzd9v30wSHSf/MdjOGRZahqCWWypL/3Q/SDhwiU+UVruXjrmspy
      89fHSQAA75wYtLsEUWTxZJbTV6ZvOalvZbNkfvijws7ectgQn8uR+c73cc6G0dweu6tZ8apa
      Osp+OK28v7sFmJqPMzAeuv07ihXFtCxGpyO3HAbK7T9Ibv/BZaxq6Zmzs1ivv4PbrPh/2nfF
      6fXjrWlYUZ1Z70TF/5T0j8ySltO+ytJUKMF87Mb7OozJKTI//TmU20Efpol54k0C5PEAACAA
      SURBVDSOK6OyKewueOsacfmWr+W0XSr6J8QwTU5dnpLjHsvUxGyMK+MhjOvaJliZDJkXflHy
      a/3vWDKJ+8AxtPDyn3xWDjSXm0BTe9meAfBxFR0AsWSWmXCiKL1jRGk6O/jpeQBjeIT8+4fB
      KN9lv8rENM5LK3xi2ybuqmp89c12l7EsKjoA5iJJ5iLS+qGcTc3H0Y2PngCsfJ7cvncxp26/
      Qmil853sR/n4ATViQapau3FUwN0/VHgATIcSTIcTdpchltC5wRliyY+6eFqxOLm334EbdNMs
      N2oyg394Gijvicxi8tQ0UNu1xu4ylk3FBoBumEyF4iTTsv6/3A1NftQWInfwfczZORurWT6K
      aeIZmsLtlCWhC6E6nDT0bbK7jGVVsQGQ1w1mQnL3XwlGpsLX/jv3xtv2FWIDbS6MP5FDLeN+
      NsVS1dKJt6bB7jKWVcUGQDanM7LIhmFiZfrw7zl/9hzG5KTN1Swva2YW31yCQEN597S5W56a
      empXrau4oKzYANANc8G9YsTKNjhZeALQz57HSqy8Zm93yxoeobauDYfHZ3cpJUnRNGpXrcMT
      rCn7jV/Xq9gAyOkGU/MyBFQJ0pk8Vi6HOTYOucqb8zHGJ3CaCnU961FUew5WL2XV7T1UNXfY
      XYYtKjcA8gaZnG53GWIZZPMGl05fxpicKo+eP4tkTkxihUJUt6+ipqsXZIfwNd7aBupXb0DV
      KjMYK/Yn4cqE9P+pFJZlkZuYwpxaIQe9FJtpkj97DtXhpG71RgLN7XZXVBJcgSCN67bhrICW
      DzdTsQEg7R8qh2lZpOfDmLHKbY1gjk8A4PR4aejdhKe6zuaK7KU6XTT0bam4VT/Xq9gAKAea
      quBxOfC4HLic2rUJLFUp/H6FzWfdVF43GBuZhtQiJ/2dzk+/ff3vLTVFKco+LnN+/trwl6e6
      lpbNu8v6rNtbUlQa+rZQ1dxe9u2eb8dhdwHizj22s5cHtnaTSGbJ5HROD0xx8MwI1QEPu9a3
      8/6ZUaIf2wVbqUzdIBeNL+pjlGAQz9e/Svp7P4B0ITicWzeDppE/fHR55hIcDhzr+jBDYczJ
      u2tdYcU/ueDBHayhYe0WZvtPkkus0JPQ7oDmclO/ZjO1XWsq/uIPFRwAkTJZAvraoUt8cGaU
      xlo/v/boJibm4ozPRukfmSOTy1Mb9LJzXTsBr4sTlyaZmo+zur2Oxmo/ddU+LgzP0D8yh6aq
      bOltZk1HPQPjIU5cnGBLb0uhXXZWx+10sL67kZOXV+A6+nweY2ps8R933SOUMTF57cKvdrTj
      3HlPYXz9g8OYM7NofWtQqoNonR1YiSS5198EtxvHpg1o3d0Yw8OFw2dMC+euHWhtrZjRGPqp
      05ihMI4tm3CsXo2ZTJI/dAS1uRH3Fz6HGQphDI2Qe+Mt1IZ6nLt3gqqRP3xkwfMaxuDQJ0JL
      UVQCjW2oDiez/SfJROYX//qsMKrTRX3vJqo7euTif1XFvgrjs+UzHmxZFtOhBOcGZ+hpqyXg
      dbGlt5mAz83eLd143U5GZ6I01wUI+Nx87v51BHxu5iJJdq3vIOB1sbaznj0bOxmdibJ7Qwcb
      VjXR3VrLtjWFDUR9nfWs6ai3+Tu1l7a6B21VN0pNNa7HHsGKxbESSdzPPAU+L85dO3Du3IE5
      No5jbR9qVxfObVtw9K3BGBxCcblQPF6ce3bh2LwJ/fIVtI421I52FJcLtaoK48ogWmMDrr33
      QSaDGY1hzs1jTk+j+Ly4PvMYuFygqrgefRjFd+dr+xVVxV/fTMum3bgCwSK+UqVHdThp3riT
      ms7VaBW22etWKjYAPt4hslxEEhn8XheKouB0aKiKgtvlIK8bTIcSHOufQFVgfDbGm0cHOHRu
      FAsLv8fFms4GJubijExFGJoMs2l1M++cGOSh7T24nRo717dzrH/c7m/RVoqmgaah1tWiKAq5
      fe+Se/8DzEgUR3c3WJB79XXyh4+inz6L1tGK4naBBVY0in7mLFY0iuvBvYWjKE+ewhifRFE1
      rHQavf8iZiKBMTmF2tCAGYpgDg9j9F9CP3UGtbkZJRDA6L+IcfkySlUApanxrr8vd7CGzt2P
      EmxfhaKV2aCAouAO1tC+8yGCbd0Vt9P3dsrsb3vhGmvLb+lXV3M1Mx/rbmqYJgdOD7N3SzdP
      7F7DxFyMExcnrv6phVX4PxQF/B4nDTV+FAXcLkfhOMVYmplwgj2bOjFMi7motM4GQFGxdL3Q
      UdQwIZsF59V/SteGWSxAIX/sBM773LgeeQgrGiO77x0UlwvL+uQNiNrSjPvpJ7HicXC7C5/v
      +slfhwO1rhbH1i2Qz2OGI4uf2L7Rt6MoOL1+GtdtwxWoJnTlPGa+HDbMKQRbu6hbvRFPsEIn
      vG+jYp8A2hrK55FXURTWdNTT19nA4MfON1YUhXze4Gf7zvLie+e5b3MnDu3Tf+WGaTEXSTE5
      F+f1I5d57dAlBsYLY8LH+if4/APrmZqPk86u0KWzmoZaX7xlj1Yuh+LxoFRVoXg9KE1NmJGb
      DCmqKrn3DpD5+YvgcaO1tWFMTeN+9BHUpka03tWFd2tvwwxHyPz05+SPncDK5cAwsAzr2jCP
      lUhgRiLkjx4n+/Ir5PcfxEwsbDe72tjwqTmN6zk9PupWraN5405c/qqFvyAlSHO5aVy3lcb1
      98jF/xYq9gmgHCTTOR7f1csj21cTiqX4xbvnmQ4nqK3yEk9lsSyLB7etorulFqdT5ci5cbI5
      g1gyg2kW5g6iyQy5vMGJSxN85bEt/Isv30c2b7Dv+BWmQ0km52JMhxOfOlhlJVGcThzBRri8
      iA8yTbT6Ovx/9K9A18ntexcrlcIyDMzpGcyJCbz/3W+D5kA/fhJzbBwrFsO6esawlUphmSZa
      72pcjzwEuo6VTGGMT2D+5Ge4n/08nq98GSXgxzIMjKEhnDvuwfc/fAtcTszpGaxcHmNkBPfT
      T+LceQ+pb38X/ex5vN/8OmYohDkzS/alV1jIeiS1ZWEnXKmaRrCtG29NPfMDZ0lMj2OsoKcB
      RdPw1TXR0LcFT7BWJntvQ7GsCtwbD/xy/wX+448P2F3GklMAr8eJokAyffs7eJ/bSTqXx7LA
      7dTY1NNMX1cDLx/sJ5ZcmadLBXwu/rBDZfM//riovYCUgB8MEyt9m2EYpxPF5ysM75gm2vp1
      KG43GDqupz5L+jt/jzV/9ckt4IfrG9Y5HKBphaEmKPy30wmZhS/xdT5wH4E//ZNFXxBjkyNE
      RgbIROcx9RJ+AlQU3IFqgm3d1HavRXXIve1CyKtU5iwWt+s59bFhniqfm4YaP0fOj6/Yiz+A
      Q1WpbWtCra7GnJ0t2uddcGfRfB4r+rEhIk1DW9WNlU4XnizmP9aW5EafU9cLvz5kGIs+z1jr
      uLNmZ4Ue+fWk5meIjg+Rmi+9ozQdHi/B9h6qWjrxVNXIXf8iVGwAbFh196snyl04nmbf8UGy
      +RXeNE8BR30tSn0dFDEA7pRx7jzG5YHChPEydSfVentuOwdwIx9OEAfbV+FvbCE5N014+CK5
      eBTTNGxrrqdoDpweH1WtXVR39OBwe1DLbQXTMqjYV8zjcqBpCoZRkSNgC2KYFoa5wi/+gMuh
      0bVpDVZzE8aFfrvLKVw0s8v3RKXU1qC1t91Vr3tFUXC4vVS3r6KquYNUeJb49BiZyDz5VGJZ
      hocUVcXpC+DyBQi2r8ZX34jDJcdd3o2KDQCnQ6O5NsDE3OJaBIiVR1UU/HXVpFd1w4H3IV/C
      Y9lLQFu1CqWmumifT3U4CDS24qtrIpeMk42HSYfmyCZjZGPh4oaBouD0+PDUNuCva8JdVYM7
      WFux7ZuLrWIDQFNVAj43IAFQ7vq6Ch0ftb41KH4f1s2WbJYpbVUXanXxAuBDqqbhCdbgCdYQ
      aGrH1PMY+RyZaJhsLEw6Ok82HsUyr5uvuH7Y6BNPJgqay4UnWIe7qgZ/QwsOjwfN5cHhchf9
      e6h0FRsAXreTvs4GLo7M2V2KWGJNtX4AnFs2oTY0YFRQACg11Tg2bkTxLO1QieZ0oTldOL1+
      PMHaT/yZns2QTRRec9PQycVjmEZhaFFzuXD5gyiqiuZw4QpUyVj+MqrYV9rpUKkPyhmplaC3
      vdDDSPH5cO7YXpiArRBqSwvOTRtsrcHh9uBwfyyAmuRAmlJRseulnA6N1oYqnI6KfQkqxocB
      AOB+8gkbK1lmqoprz+7CLmAhbqCir35NtX6ayrAnkPhIR1OQ2irvtbfVlhZcjz9qWz3LSfH7
      cD32iN1liBJW0QHQXFdFc50EQDnraq755FOey4nrM48WdVVMqXI9tBetvc3uMkQJq+gAqPZ7
      qA7IOuJytmFVEy7nR1NdiqLgWLcW5/atNla19JTqatxPP2l3GaLEVXQAuJwam1c343VX7Fx4
      WfN7nHS31KCpn9wApQSDuL/wedTWVpsqW2Kahue5L1zrNCrEzVR0AABsXdOK3+uyuwyxBLpa
      amhtCH5qB6yiKDi3bcH9xGM2Vba0HJs24nrsYRSX/FyLW6v4AGipq6K1fmX3Phc31t5YTWON
      /6Z/7v7SF9H61ixjRUtP8fnwfOnZO27+JipLxQeAy6mxZ1OX3WWIIvN5nGzsacLrvvkRgGqw
      Ct+3fhe1qWkZK1tCqor7uWdx3nev3ZWIFaLiAwBg79ZuPC6ZBygntVVedqy9/QoYx+ZNeH/n
      myg1K/zUKFXF9chDeL72FRSnnHsrFkYCAKgJeNnQUyZ3gQKAjT1NtC7g2E/F4cC19348z32h
      cPDKSqQoODZvxPONr6H6bz7kJcT1JAAotIZ+ZHuP3WWIInpsZ++C31fx+XB/+YuFEFiBtNU9
      +P7Ft9C6Ou0uRawwEgCAqiqs626kt714B4cL+6zrbmBrb8uiPkb1+/H+02/i/e1vgM97+w8o
      BaqKtm4tVf/7v0FbvVpOwhKLJj8xV7U1BNm+tg2HJi/JSubQVB7b0Yt2BxdDxevF/aVn8f7m
      V1GWoH1yUbldOO/dhf8P/yVKQ8NdHfYiKpdc7a7yuBxs7W2hyi89x1ey9sYg2/taUdU7uyCq
      wSCeL30R33//eyh1pftE6H7mKXx/8Ptovavl4i/u2Aqd9VoauzZ0sKW3hXeOD9pdirgDmqqw
      Z1MXbY23n/y9FcXrwfX4o2hdnaS/+33yp05DdnnO7r0lTUNtacbzpS/i/txTstFL3DV5AvgY
      h6by5Yc3SovoFaq9Mcgj9/Tgdt79fY2iaTjWrcX/v/wx3m9+A7XT3o1Vis+H+6knCPzPf4T7
      2c/JxV8UhTwBXGdddyPb17Zx+NyY3aWIRVAUuHdTJ6tai7ueX62uxvPVr+DYuIHcvnfIvfUO
      VnwZjxF1OHCsX4f780/jvH+PLPMURSUBcB1VUfjKo5u5MDxLPJm1uxyxQF63ky8+uBHHEhwW
      rqgqji2bcPT14v7c02R++nPy73+Alc4szQHzqori9aB2duL5tedwbt+GUh2UVT6i6BTLuv6E
      ZpFM5/jey8d48b3zGKa8PKVOUxW++fQ9fOPJ7cv2NY3JKXLvHUA/eQpjfBJzbhYyd3HDoGko
      VVVoHe1oa1bjenAvjs0bUZYg0IT4kATATZwbnOb/+uG7jM/G7C5F3EZfZz1/8juP29LUz4wn
      MIZHMMfGMYaG0AeHMWdmMKdnbvt0oDTUo9bU4Fi/Fq29HbWlGa1vDVqz7EoXy0MC4CbyusFP
      3z7Dd186Jk8BJczvdfF7z+7iqT1rl3wPx7V/Ktf+yVhgAaYBiShWPIaVSGIlE1izU5BOYYxP
      YIYjn/g8jo3rUVwuFLcb3G7Unj4UjwdUFbx+8F0Nsg+XdyqF/5HlnqLYJABuIZHO8af/9TXO
      XJm2uxRxA6qi8MTuNfzBr9+Pu8jN/CzLAkOHXBaMPORzkElBMg6pOKQShbfTiaJ+3U+oaQDN
      CYEguDxQ2wiao/DL7QWHU4aIxF2RALiNw+fH+Isfvks4nra7FHGdhhof//aff5be9vqifD7L
      MCAehkwaEhFIJwsX+my6cNE3jaJ8nbvi8oDLDVW1hRDwBQpPDYFq8PhQNFnXIRZOflpuY9Pq
      Zp7Y3csL75wjr5t2lyM+5ref3nHXF38rn4O5KYjNQ2SucFev5yGboTC+U2JymcKvRLTwtqaB
      wwVuDzhcWHXNhSeF6noUl+xqF7cmAXAbXpeDZx/cwOh0lA/OjSLPS/ZzaCpP37eWh7avWtTH
      WYZeuLBnUhCegblJCM+CZbJi/2INA4x04SkFIDRTmDtwOLGCddC2CmrqwekGl0eWkopPkAC4
      DUVRaK6r4htPbWd0JiqrgmymKIVe/889vBG/Z2G7Ya1EDGIhiM5DaLowvGOUwHDOkrAKYZbP
      wvxk4ZfDCdX10NBaCIWqWnB7ZFJZyBzAYrx2+BL/6ccHyeR0u0upWDUBD3/8Ww+xc137LTt+
      WoZRGNKZGoHoHCRjhYncSqYo4PEVVhnVNkFLJ0qwdBveiaUnAbAImZzO82+d5kevnyKXL9c7
      yNLldKj88Tce4uHtPZ+6+F9btZNJwfwUjFwsTOIa+sod3llKilo4Aa2qDrr6oK4JXG4UVVYV
      VRIZAloEj8vBFx/cQCSe4Vfv98uk8DLyeZw8uaePvVu6P33xz6YhMg+z4zA9+tF4uLg5yyw8
      EYWmCr/8QWjrwapvhqpaFKc0m6sE8gRwBybn4/w/PzkoDeOWidOh8uS9ffyTz+2gJvDRaV1W
      Nl244M9Nwvx0Ydxb3B1fFdQ0QmsXNLTKstIyJwFwh6ZDcf787/dxbmgWeQmXjgLs3NDOH351
      L021ASzLhFyucLc/eL6wEUtfgoZslc7lhmAdrNoA9c2gajJpXIYkAO7C5FyM//zCBxw5P45u
      yHBQsWmqwtY1LfzJ7zxOwOMsjO/PjMPopcKGLbH0FAXqWqB7LdQ1obg8dlckikgC4C4NT4X5
      2xeP8MHZUbtLKSuaqrB7Qwf/7Iu76Qg6C6t5ZsYKyzjlR3b5OVzQ1A4tV4eGHE67KxJFIAFQ
      BDPhBP/2797g0ui83aWUjXvWtvIvf/1+2pUUysCZwjp+Geqxn9sD1Q2wdjtKsNbuasRdkgAo
      kplwgv/8sw84cn6MrCwRvWMel4Nn9qzhm/e24Z8cKGxkkh/R0qMo0L0e2nugqkaWj65QEgBF
      NBtJ8rN9Z/n5O+dkTuAO1FZ5eXpLC19Z5ycwO1ToxClKl6IUmtC190L7ahS3zA+sNBIARRZP
      ZfnZvrP85K0zsmN4EXwujW/d38bDNRl8mVhhnbpYGTQHNLTC6s0otQ12VyMWQQJgCWTzOkcu
      jPPfXj3B5bGQLBO9BYcCnQGFP9pVzWpnCq0UO3CKhXG5oWsddPWheHx2VyMWQAJgCfWPzPL8
      m2c4eGZYdg3fQLVH48EGk6/0umlzy7xJ2WjqgJ4NUNMgG8lKnATAEgvFUrx5ZIBfvHee6dAS
      nh61wtS54HfXO7m3ziLokg1GZccbgI5e6NkgS0ZLmATAMsjrBoOTYb730lFOXpoip1fu3W7Q
      6+T+Di/PNefo9uhoqlz8y5aqFeYGNuwCr1/OIihBEgDLyDQtfvL2Gd45PsjgZKiihoXcTo3e
      5ip+s8/DVnccj1nhrZkrSbAWejYV2k/LkFBJkQBYZoZpMjYTZf+pYV46cIHZSMrukpaUAnQ2
      V/PZzS08EEjRnp0tjbN1xfJye6FjDfRukiGhEiIBYJNsXmd0OsqbRy7zxpEBoslMWe13UhQI
      +tw8vquXZ7c20zDZjys+L8s7K5mqFTaOrdlaOMBemsvZTgKgBMxGkvz07TMcOT/OVCi+og+b
      cTs1etrq2NbXyufuW0tzPgznDkuPfvGR2iZYuw3qmiUEbCYBUCIMw2RwMsyx/nFOD0xx8tLk
      imopUVPlYV1XI1t6W3jknh4aA06YGILLp+XiLz7NH4QNu1Ca2u2upKJJAJQY3TAJx9NcmQjx
      o9dPcfbKtN0l3VJzXYD7Nnfy2I5eGmv81FR50TBh8AJcOQu6TPaKm/BXw7rt0NiOokkvITtI
      AJQoy7IwTIu5SJL9p4c5cGqYUCxNIpUlns7aMl/gcTnwe11U+dxsXdPCZ3atobe9DlVVUBUF
      RVGwMmk4fwQmh0F29Yrb0RzQuxlWrZfJYRtIAKwQpmkxOhNhYDzElfEQ47NRZsIJpsNJ4sml
      a5rW0VRNQ7WP5roAPW21dLfU0tteT3Xg042/rFQc+k/A1LB08BQLp2qFOYHudbJMdJlJAKxA
      lmURjqeJxDOE42miyQyj0xEm5uLMhBNEEhkmZmOL+pwBn4uOpmoUYMOqJhqq/TTV+mmsDVAd
      8FBb5cXjuvk/TiuTgvNHC2f0yjJPsVhOV2F1UFefhMAykgAoA5ZloRsmumFiGCbm1bcBYsks
      VyZCN/y4uqCPruZqAFRFwaEVdmq6nBqqql57+7ZfP5eFE+9J735xdxyuwjLR3s3STG6ZSACI
      u2KlEnDhWGHYR4hi6FpbWCEkE8NLTppziDtmpZPQf7xwVq8QxTIxCCMXsQw5T2OpSQCIO2Ll
      snD2cOGwdhnzF8Wk5wv7R0Yvy1kaS0wCQCyalc/BmQ9gZlRaO4ilkc/ClXMQnsUy5WdsqUgA
      iEWx8jkY7oe5CbtLEeUuk4SLJyAZt7uSsiUBIBbMMgwYuXh1h2/e7nJEJYjMwsUTWNmM3ZWU
      JQkAsSCWacL0SGFsVi7+Yrl8+HN38Xjh6VMUlQSAWJjwbGG5p6zMEHYYv1JYGSQLDopKAkDc
      lhWPFO78M9LVU9jENGHoAkyNyKRwEUkAiFuysunCxX9+EmnuJmz14c9iZM7uSsqGBIC4teH+
      Qn8fIUpBIgrnjxR6T4m7JgEgbsqaGi08dsu4qygl0XkYPI+ly3zU3ZIAEJ9iWRZWLAwDsuJH
      lKixAZi4IvMBd0kCQHxaLgOD5yB24y6iQtgun4WhfojMSruIuyABID7BsqzCaV5TI9LaWZS2
      xNXVaTJEecckAMQnZVJw6ZSs9xcrw/wUjA7IU8AdkgAQ1xQ6fB4qPF4LsRJYVmGuKjxjdyUr
      kgSAAK62epgYhNC03aUIsTjZNAxdkKWhd0ACQBTEwzBySVb9iJVpdgLmJmUoaJEkAETh5KXh
      /sKkmhArkaHDxZOQjNldyYoiASAgNAuTQ3ZXIcTdySQL7crFgkkAVDhLz8PAKTBkKZ0oA5PD
      WPMyj7VQEgAVzLLMwo7KqGz4EmUim4ah84UVbeK2JAAqWSIG44Oy5l+Ul/AszE5Im4gFkACo
      UJZpwtwkxOXuX5SZXAZGLxX+X9ySBEClyqZg7HLhoA0hyk14prBLWNySBEClmhyGuCz7FGXK
      suDy6cIiB3FTEgAVyIpHZLmcKH+pROFGR9yUBECFsSyr0OkzLdvmRZmzCu1NrKycZX0zEgCV
      JhEtHPFoydi/qACROZgYkhVBNyEBUEEs04DZ8UIICFEJDL3Q4FBWBN2QBEAlyWZgZlwO0BCV
      ZX4aYmFpFHcDEgCVJDQt7Z5F5dFzsujhJiQAKsnoZbsrEMIe81OQTtpdRcmRAKgQVjwC0Xm7
      yxDCHoYO4wN2V1FyJAAqgGVZhcNepOePqGRTo1ipuN1VlBQJgEqQSUJYxv5FhcskISRnB3+c
      BEAlCM3I+KcQ+RxE5rB0eRL+kARAmbPyuUIA5HN2lyKE/cIzcmzkx0gAlLt0ovBDL4QoNECM
      hWRPwFUSAGXMsiyIRyEpE19CXDM7IUegXiUBUM6sq4e+SN8fIT4yNwGmzAOABEB5y+cLjd+E
      EB/R8zAl/y5AAqC8zU8VtsELIT5JbowACYDyJkfiCXFjiQhWRs4JkAAoU1Y2A+FZu8sQojTl
      83KDhARA+YqFIZ+1uwohSpORh3jY7ipsJwFQrmLzsvlLiJuxLEhEsSr8oBgJgDJk6TokYnLw
      ixC3kkoUflUwCYBylElCSra7C3FLmWTF98iSAChH6aTs/hXidvR8YTVQBe8KlgAoM5ZlFcb+
      K3xsU4gFSVb2UKkEQLkxDDn3V4iFioYKTwIVSgKg3FhmoQOoEOL2krGKflqWACg3plFoeSuE
      WJhE1O4KbCMBUG70PGRSdlchxMohASDKRkzu/oVYlAp+YpYAKDeRObsrEGJlkScAUTYylb2x
      RYhFy2exspXZGVQCoNxU8OOsEHfEsip246QEQLmp4DXNQtwRy6rYpaASAGXEioUrelejEHfE
      Miu2KZwEQDkx9MLdjBBi4Swq9slZAqCc5LMSAEIslmVWbPdcCYBykkoWfpiFEItToR1BJQDK
      iWXKE4AQd0LPY+Uq7whVCYByks9RGNAUQiyKngcJALGipRNgyhCQEGJhJADKiYz/CyEWwWF3
      AUJUIsuymIslmA5H6WqqRzdM/B43LoeGZVkoioKiKHaXKcqcPAEIcQcO9Q/wp9//CbFUoYfM
      bDTGj989dNP3n4nGmAp/1KZjbC7E3726j/fOXWQqFOH1E2eYDkeYDEX40TsfXPu8YpkYOug5
      u6tYdhIAQtyBwelZDl8c5OUjJ7Esi3g6w5FLgwDkdJ1QPMF8LEEur5PTdfadvsBrx84QiifI
      6zonB0fI6waPb9uI3+thKhQlnctTG/Dz4Ka1eF0u4qk0lmVhmoXPb8kKr6WTz1dkOwgZAhLi
      Dn31oT28euw0j2zZcO33snmdn79/lJcOn8QwTZ7ZtY11HS38w76DpLN5TlwZ5lvPPM53XnuX
      eDpDJJniqw/de+3jZ6MxXj9xlmd2beMvf/4K//zpx4in0vzj4ZP8b1971o5vs0JYFbmATgJA
      iDsU9Hl4eudWfvLeYZ7atQWA8fkQpwZH+VdffBJVVfjJe4e5d+1qfuPBPWRyOX79oXvxOJ38
      zmcfYmw2zG8+eh+5fJ73LwwAkNMNQvEkXpeThzev469+8Qouh4Nf37tb5gRE0ckQkBB34YEN
      fUxHolyemAZgPpbgwugEP3z7AN9/cz+XJ6aJp9N43U7cLicBjweHpuF1O4txDAAACmdJREFU
      ufC4HPjdblT1xv8M79/QRzqbI+DxsKWnazm/LVEh5AlAiLvQVFPNPb3dvH3qPLl8Ho/TSW9r
      E7+2dzcttTUYpkFzTTWToQiZ3OIajl2ZmiGZyTI+H2J4Zo4NnW1L9F2ISiVPAELcAYXCMk1V
      VdizrpdwIkkokaSjsY76YBUvHDjKmyfP8t7ZiyQyGTob6zl88Qrffu0dIsnUtc/CTUZ1oqk0
      P3z7IP/6S0/zxT07+P6b+8nl9WX7/iqOwwkul91VLDvFkqUFZcM68S5MDNldRkWYCkf4/9u7
      098qrjOO498zc/d95dq+3m0MTjBp2khtpP7/b6pKqdqSpKJOAIOJQxxMCXi7nr44dhSCMV7v
      mTnn95GQgFcPxp7fnbM8T2QM/WaDBPh2Y5ODwxFr89Nsbr/k6yfPSEiYaLdYnhwACV+tP+H1
      212+XF1md/+A3YMDJjstDkcjNrdf0mvUMQa2Xr6i26izvrnFvflpDkcjHjx+ytr8DLk4dv1P
      91OzC5/9FVNruK5krBQAHlEApMdvf6xONm9P+ztJiUADQHsAIjfgtAe8HvqSNtoD8EmlAUb/
      pSJyPnpa+CRfAH3KFLm4OGc3ggOjABARyRcwpbLrKsZOAeCTSg0+cKlIROT39LTwSaGkPQCR
      izIRNDquq3BCTwufxDntAYhclAGiMO9XKAB8Uq2DLgqJXIwxUK66rsIJBYBHTJyDSt11GSLZ
      YqJgf24UAL4pVVxXIJItJrJvzwFSAPim1XNdgUi2FEuYfHiN4EAB4J9yzXUFItkS6AkgUAD4
      p95yXYFItlTDagD3WwoA30Qx1JquqxDJDgWAeCOKoKoAEDmXOGdbQQdKAeCbONYykMh5NTqQ
      C7crvgLANyayPYFE5OMqtWBvAYMCwDvGGLumGejFFpELabTtMlCgFAA+KpZ1HFTkY/JFqNQx
      AXfQDfdf7rNiGcq6ESxypkot+OVSBYCHTBxDqx/khCORc6vUgn9TVgD4qtFSAIh8yPFxaRP4
      z4gCwFfVJhS1DCRyqjgPrXDP/59QAHjK5AvQm3Rdhkg6FYrQnXBdhXMKAJ/1p1xXIJJOt4Z2
      fkbgFAA+a3agFOakI5EzdfTpHxQAfjMR3Bq6rkIkXUoVrf8fUwD4zBiYmA36qrvIewbTOiF3
      TAHgMXMy7LoZ7sALkXfEObv8ow9FgALAf6Vq0O1uRd5RbUCtYT8ciQLAdyaOoTelYfEiGHv0
      UwOTfqUACEGrF3zPExGKZehNYoweeyf0lQiAKRShr9NAErhqHdp911WkigIgFFPzQfc9F2G4
      EHzvn99TAATClGswvey6DBE3imUYzLiuInUUACEZTEOu4LoKkfEbLtoBMPIOBUBI6i3oDlxX
      ITJehZL2wD5AARAQUyzD5Bzk9RYgAZlagGZXZ/9PoQAITWegi2ESjkIJ2n1MTgcgTqMACIwp
      VexbgK7CSwhaPc3FOIMCIETDJWi0XVchcrPiHMzdscOR5FQKgACZKIL5VTsXVcRX7T5GQ5HO
      pCdAqLoD+3os4qM4hvm7rqtIPQVAqAolmLmtvujip8l5tX04BwVAoIwx9kRQdwLQ8TjxSKUO
      wyWMLn59lAIgYKZchdnbuhcg/jDmeHlTR53PQwEQuu6E5gaLPwolWPgEo8aH56IACJyJYli+
      r4Exkn3GwNI9jAa+nJsCQOzc4IVV0KAMybL2Ldv2Qc5NP/Fi7wUMZtUoTrKrWLbHPrWfdSEK
      ALHKVVj8FMoaHSkZE8Uwswz9KTV8uyAFgADHx0LbfTs5TCRL6i0YLmrj9xIUAPIrE+dg7i5o
      E02yZHkNU224riKTFADyrmIJ7nxu11RF0sxEsLwG6vdzaQoAeYcxxrbPnburIfKSbt0JmF6y
      R5nlUhQA8h4T52B6UX3UJb1Oji6Xq64ryTQFgJzKlCpw94+2r4pImpy0M+9OYHR35Ur01ZMP
      MtWG3Q8oqKmWpIQxML2MWVi191fkSvQVlLP1p2BmxfZXF3GtM1Cf/2ukAJAzmVwe5lagP0Rt
      o8WpWgtu3wcd+bw2CgD5KFOqwNqX0NYEMXGkWLbn/TsD3fa9RgoAOReTL8DdP9lblyLjFEWw
      sIrRLfVrpwCQ82t2YemeLonJ+EQRzK7A9JLrSrykmz5ybiaKSCbnAQPf/B1237guSXxmjH3w
      r/xBlxJviN4A5EKMMfZVfOET24VR5KYcv3GaXF7r/jdEASCXM7MMc3cUAnIzylVYvIdRe/Ib
      pfcquZw4ZxtxxTF8/w0cHriuSHxRLNtTZx0NKLppJkmSxHURkl3J4SF8/zU8/CccjVyXI1lX
      qcPqF5jBtOtKgqAlILkSk8vZplxaDpKrqtRt65G+mhCOi5aA5MpMnCNZumdPbTz6FkaHrkuS
      rCmWYfUL6E+qvfMYaQlIrk0yOoTvHsB3X8PBvutyJCvKVVj7EqP242OnAJBrlYwOYeO/dk9g
      763rciTVDDQ7x1O9huru6YACQK5dcjSCjXX4z1ewv+u6HEmrRgfW/gL1th7+jigA5EYkSQIv
      X8CDv8HOT67LkTSJYjtt7t6foVjWJS+HFAByo5Kdbfsm8GITkiPX5YhruYJt77D4ie0yK04p
      AORGJUkCb17bzeGn6zohFLJ8AZbvw3ARoylzqaAAkBuXJAkcHcGTh/DwH7C/57okGSdj7Hr/
      nc+hM9B6f4ooAGRskiSBraf2beDnH7UkFAITwXHzQNNou65GfkcBIGOVJEfw+hVsPLQ9hPTt
      569CEeZXYeY2plhyXY2cQgEgTiSHB/DsO3j4L9h7oyDwycmSz8pn0JnAxLrZm1YKAHEqeb0D
      6/+G54/VUdQHxbJd8ln8FKPJcamnABDnkoM92HxkW0j88sp1OXIpBto9mLsLE7Pa6M0IBYCk
      QnJ0BK+2bTO55491XDRLTAQr92FqAYoVPfwzRAEgqZNsbcD6A9jZhpGWhVIrX4T+lB0P2mjr
      Rm8GKQAkdZIkgbe/2GWhp+vw+qXrkuS3oghafZi5DbeGmHzBdUVySQoASa1kNII3r2xjucff
      wkgTx5wrVWD2DkzMYGpN19XIFSkAJPWSoyP430t49A38+Az2dgF9245NFNsH/8yy7eNTKAJG
      Sz4eUABIpiQ/PoPnj2wQ7L5xXY7/mj24NYTJOag29ND3jAJAMic52IdXP8PWE3uZbE8zB65d
      pQ7DBZiYg2pdYxo9pQCQzEpGh/YtYGPdvhXsvtHx0avIF6Bcg4VVe7onlwcT6VO/xxQA4oVk
      fw82v7dzB3Z+0vLQeZkIKjVo92EwA70ptW4IiAJAvJLsvbXLQ9s/wA8b9maxuo6+L4qgM4De
      FLR60Oxg4pzrqmTMFADipWR0aOcOvN6x9wlePLN/Pgr0KKkx9qFfLNtxjLMr9vf5om7uBkwB
      IEFIDvZhewu2NmzLib239pfP3/4nD/xyzV7c6k1Aq4fJ5V1XJimhAJCg/Dqi8pcduzy0vWVb
      TvjSktoYaHShWodmB2ptaLYxBfXjl/cpACRoye5b2N+1m8Y/b8GL5zYcstSaulSx5/VbXftJ
      v1SxJ3ryBZ3gkTP9Hxm3X68bceiUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Normalized_stocks_compared' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      LVRAi1uwuqsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Stocks_Compared' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
